{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as UserActions from \"src/app/state/auth.actions\";\n// import { AuthenticationService } from '../../services/auth.service';\nlet LoginComponent = class LoginComponent {\n  constructor(store, formBuilder, route, router, authenticationService) {\n    this.store = store;\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.authenticationService = authenticationService;\n    this.loading = false;\n    this.submitted = false;\n    // redirect to home if already logged in\n    // if (this.authenticationService.currentUserValue) {\n    //   this.router.navigate(['/']);\n    // }\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['/'];\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    this.store.dispatch(UserActions.loadUser({\n      payload: {\n        username: this.f.username.value,\n        password: this.f.password.value\n      }\n    }));\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.authenticationService.login(this.f.username.value, this.f.password.value).pipe(first()).subscribe(data => {\n      this.router.navigate(['/tutorials']);\n    }, error => {\n      console.log('error', error.error.message);\n      this.error = error;\n      this.loading = false;\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  templateUrl: 'login.component.html'\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","Validators","first","UserActions","LoginComponent","constructor","store","formBuilder","route","router","authenticationService","loading","submitted","loginForm","group","username","required","password","ngOnInit","returnUrl","snapshot","queryParams","f","controls","onSubmit","dispatch","loadUser","payload","value","invalid","login","pipe","subscribe","data","navigate","error","console","log","message","__decorate","templateUrl"],"sources":["C:\\Documents\\GitHub\\angular-12-node-js-project\\angular-12-client\\src\\app\\components\\account\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/services/auth.service';\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { UserState } from 'src/app/state/auth.reducer';\r\nimport * as UserActions from \"src/app/state/auth.actions\"\r\n\r\n// import { AuthenticationService } from '../../services/auth.service';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n  loading = false;\r\n  submitted = false;\r\n  error: any;\r\n  private returnUrl!: string;\r\n  loginForm: FormGroup;\r\n  constructor(\r\n    private store: Store<{ user: UserState }>,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    // redirect to home if already logged in\r\n    // if (this.authenticationService.currentUserValue) {\r\n    //   this.router.navigate(['/']);\r\n    // }\r\n    this.loginForm = this.formBuilder.group({\r\n        username: ['', Validators.required],\r\n        password: ['', Validators.required],\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['/'];\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.store.dispatch(UserActions.loadUser({ payload: {username: this.f.username.value, password: this.f.password.value } }));\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        (data) => {\r\n          this.router.navigate(['/tutorials']);\r\n        },\r\n        (error) => {\r\n          console.log('error', error.error.message);\r\n          this.error = error;\r\n\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,KAAK,QAAQ,gBAAgB;AAItC,OAAO,KAAKC,WAAW,MAAM,4BAA4B;AAEzD;AAGO,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAMzBC,YACUC,KAAiC,EACjCC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc,EACdC,qBAA4C;IAJ5C,KAAAJ,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,qBAAqB,GAArBA,qBAAqB;IAV/B,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,SAAS,GAAG,KAAK;IAWf;IACA;IACA;IACA;IACA,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACe,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACe,QAAQ;KACnC,CAAC;EACN;EAEAE,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,SAAS,GAAG,IAAI,CAACX,KAAK,CAACY,QAAQ,CAACC,WAAW,CAAC,GAAG,CAAC;EACvD;EAEA;EACA,IAAIC,CAACA,CAAA;IACH,OAAO,IAAI,CAACT,SAAS,CAACU,QAAQ;EAChC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACZ,SAAS,GAAG,IAAI;IACrB,IAAI,CAACN,KAAK,CAACmB,QAAQ,CAACtB,WAAW,CAACuB,QAAQ,CAAC;MAAEC,OAAO,EAAE;QAACZ,QAAQ,EAAE,IAAI,CAACO,CAAC,CAACP,QAAQ,CAACa,KAAK;QAAEX,QAAQ,EAAE,IAAI,CAACK,CAAC,CAACL,QAAQ,CAACW;MAAK;IAAE,CAAE,CAAC,CAAC;IAC3H;IACA,IAAI,IAAI,CAACf,SAAS,CAACgB,OAAO,EAAE;MAC1B;;IAGF,IAAI,CAAClB,OAAO,GAAG,IAAI;IACnB,IAAI,CAACD,qBAAqB,CACvBoB,KAAK,CAAC,IAAI,CAACR,CAAC,CAACP,QAAQ,CAACa,KAAK,EAAE,IAAI,CAACN,CAAC,CAACL,QAAQ,CAACW,KAAK,CAAC,CACnDG,IAAI,CAAC7B,KAAK,EAAE,CAAC,CACb8B,SAAS,CACPC,IAAI,IAAI;MACP,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC;MACzC,IAAI,CAACH,KAAK,GAAGA,KAAK;MAElB,IAAI,CAACxB,OAAO,GAAG,KAAK;IACtB,CAAC,CACF;EACL;CACD;AAzDYP,cAAc,GAAAmC,UAAA,EAD1BvC,SAAS,CAAC;EAAEwC,WAAW,EAAE;AAAsB,CAAE,CAAC,C,EACtCpC,cAAc,CAyD1B;SAzDYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}