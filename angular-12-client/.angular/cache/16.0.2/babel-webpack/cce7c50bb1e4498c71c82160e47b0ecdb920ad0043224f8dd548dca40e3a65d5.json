{"ast":null,"code":"import { createAction, props } from \"@ngrx/store\";\n// import { User } from \";\n// export const loadUser = createAction(\n//   \"[Some Component] Load Data\",\n//   props<{ payload: User }>()\n// );\nexport var AuthActionTypes;\n(function (AuthActionTypes) {\n  AuthActionTypes[\"LOGIN\"] = \"[Auth] Login\";\n  AuthActionTypes[\"LOGIN_SUCCESS\"] = \"[Auth] Login Success\";\n  AuthActionTypes[\"LOGIN_FAILURE\"] = \"[Auth] Login Failure\";\n  AuthActionTypes[\"SIGNUP\"] = \"[Auth] Signup\";\n  AuthActionTypes[\"SIGNUP_SUCCESS\"] = \"[Auth] Signup Success\";\n  AuthActionTypes[\"SIGNUP_FAILURE\"] = \"[Auth] Signup Failure\";\n  AuthActionTypes[\"LOGOUT\"] = \"[Auth] Logout\";\n  AuthActionTypes[\"GET_STATUS\"] = \"[Auth] GetStatus\";\n})(AuthActionTypes || (AuthActionTypes = {}));\nexport class LogIn {\n  constructor(payload) {\n    this.payload = payload;\n    this.type = AuthActionTypes.LOGIN;\n  }\n}\nexport const loadUserSuccess = createAction(\"[Some Component] Load Data Success\", props());\nexport const loadUserError = createAction(\"[Some Component] Load Data Error\", props());\nexport const addCustomer = createAction(\"[Customer] Add Customer\", customer => ({\n  customer\n}));","map":{"version":3,"names":["createAction","props","AuthActionTypes","LogIn","constructor","payload","type","LOGIN","loadUserSuccess","loadUserError","addCustomer","customer"],"sources":["C:\\Documents\\GitHub\\angular-12-node-js-project\\angular-12-client\\src\\app\\state\\auth.actions.ts"],"sourcesContent":["import { createAction, props } from \"@ngrx/store\";\r\nimport { User } from \"./user.model\";\r\nimport { Action } from '@ngrx/store';\r\n// import { User } from \";\r\n\r\n// export const loadUser = createAction(\r\n//   \"[Some Component] Load Data\",\r\n//   props<{ payload: User }>()\r\n// );\r\nexport enum AuthActionTypes {\r\n  LOGIN = '[Auth] Login',\r\n  LOGIN_SUCCESS = '[Auth] Login Success',\r\n  LOGIN_FAILURE = '[Auth] Login Failure',\r\n  SIGNUP = '[Auth] Signup',\r\n  SIGNUP_SUCCESS = '[Auth] Signup Success',\r\n  SIGNUP_FAILURE = '[Auth] Signup Failure',\r\n  LOGOUT = '[Auth] Logout',\r\n  GET_STATUS = '[Auth] GetStatus'\r\n}\r\n\r\nexport class LogIn implements Action {\r\n  readonly type = AuthActionTypes.LOGIN;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport const loadUserSuccess = createAction(\r\n  \"[Some Component] Load Data Success\",\r\n  props<{ payload: User }>()\r\n);\r\n\r\nexport const loadUserError = createAction(\r\n  \"[Some Component] Load Data Error\",\r\n  props<Error>()\r\n);\r\n\r\nexport const addCustomer = createAction(\r\n  \"[Customer] Add Customer\",\r\n  (customer: User) => ({ customer })\r\n);"],"mappings":"AAAA,SAASA,YAAY,EAAEC,KAAK,QAAQ,aAAa;AAGjD;AAEA;AACA;AACA;AACA;AACA,WAAYC,eASX;AATD,WAAYA,eAAe;EACzBA,eAAA,0BAAsB;EACtBA,eAAA,0CAAsC;EACtCA,eAAA,0CAAsC;EACtCA,eAAA,4BAAwB;EACxBA,eAAA,4CAAwC;EACxCA,eAAA,4CAAwC;EACxCA,eAAA,4BAAwB;EACxBA,eAAA,mCAA+B;AACjC,CAAC,EATWA,eAAe,KAAfA,eAAe;AAW3B,OAAM,MAAOC,KAAK;EAEhBC,YAAmBC,OAAY;IAAZ,KAAAA,OAAO,GAAPA,OAAO;IADjB,KAAAC,IAAI,GAAGJ,eAAe,CAACK,KAAK;EACH;;AAGpC,OAAO,MAAMC,eAAe,GAAGR,YAAY,CACzC,oCAAoC,EACpCC,KAAK,EAAqB,CAC3B;AAED,OAAO,MAAMQ,aAAa,GAAGT,YAAY,CACvC,kCAAkC,EAClCC,KAAK,EAAS,CACf;AAED,OAAO,MAAMS,WAAW,GAAGV,YAAY,CACrC,yBAAyB,EACxBW,QAAc,KAAM;EAAEA;AAAQ,CAAE,CAAC,CACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}